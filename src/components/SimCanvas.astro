---
const id = `sim-${Math.random().toString(36).slice(2,8)}`;
const { slug, aspect = "16/9", showPause = true } = Astro.props;
---

<div class="sim-stage centered_flex" style={`aspect-ratio: ${aspect};`} id={`stage-${id}`}>
  <canvas id={id}></canvas>
  {showPause && (
    <button id={`pause-${id}`} class="pill sim-controls-inline" type="button" aria-pressed="false">
      Play
    </button>
  )}
</div>

<script type="module" client:load define:vars={{ id, slug }}>
  (async () => {
    const canvas = document.getElementById(id);
    const pauseBtn = document.getElementById(`pause-${id}`);
    const stage   = document.getElementById(`stage-${id}`);
    if (!canvas) return;

    // One-time: on the FIRST Play click, reveal the canvas smoothly.
    // Uses {once:true} so your loader keeps owning the button afterwards.
    if (pauseBtn && stage) {
      pauseBtn.addEventListener(
        'click',
        () => stage.classList.add('is-visible'),
        { once: true }
      );
    }

    // âœ… dynamic import with a variable path (your existing loader)
    const mod = await import(`/interactive/${slug}/loader.js`);
    (mod.default || mod)(canvas, pauseBtn);
  })().catch(err => console.error('SimCanvas load failed:', err));
</script>